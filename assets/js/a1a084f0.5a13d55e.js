"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[92],{6311:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>l,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var n=a(4848),s=a(8453);const o={sidebar_position:4},i="Dataset",r={id:"concepts/dataset",title:"Dataset",description:'A "dataset" is a collection of input data points, arranged in an array, used to evaluate and test the performance and accuracy of a model. Think of it as a set of different test scenarios to see how well your model performs with various inputs.',source:"@site/docs/concepts/dataset.md",sourceDirName:"concepts",slug:"/concepts/dataset",permalink:"/documentation/docs/concepts/dataset",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/concepts/dataset.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Model",permalink:"/documentation/docs/concepts/model"},next:{title:"Evaluations",permalink:"/documentation/docs/concepts/evaluations"}},d={},c=[{value:"Creating a new dataset",id:"creating-a-new-dataset",level:2},{value:"Automatic dataset tracking",id:"automatic-dataset-tracking",level:2}];function u(e){const t={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"dataset",children:"Dataset"}),"\n",(0,n.jsx)(t.p,{children:'A "dataset" is a collection of input data points, arranged in an array, used to evaluate and test the performance and accuracy of a model. Think of it as a set of different test scenarios to see how well your model performs with various inputs.'}),"\n",(0,n.jsx)(t.h2,{id:"creating-a-new-dataset",children:"Creating a new dataset"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",metastring:'title="dataset.py"',children:"from bighummingbird import BigHummingbird\nfrom bighummingbird.dataset import Dataset\nbhb = BigHummingbird(\"My customer support project\", API_KEY)\ncustomer_questions = [\n    'I recently bought a blender from your store, but it stopped working within a week. Can I get a refund?',\n    'I\\'m having trouble installing the software I purchased. Can you help?',\n    'My order was supposed to arrive last week but I haven\\'t received it yet. What\\'s happening?',\n    'I\\'m locked out of my account and can\\'t reset my password. What should I do?',\n    'The air purifier I received last week is making a strange noise when it\\'s on the highest setting. Should I be concerned or is this normal?'\n]\ntest_dataset = Dataset(\"test_dataset\", description=\"Customer questions\", data=customer_questions)\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Upload the dataset by calling ",(0,n.jsx)(t.code,{children:"upload_dataset"})]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",metastring:'title="dataset.py"',children:"bhb.upload_dataset(test_dataset)\n"})}),"\n",(0,n.jsx)(t.p,{children:"run the file"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"python dataset.py\n\u2714 Project set to: My customer support project\n\u2714 Dataset test_dataset:v1 created.\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Awesome! Whenever you see this message, it means that your dataset has been uploaded to BigHummingbird successfully and you can view it in Project > Dataset.\nIn this example, ",(0,n.jsx)(t.code,{children:"test_dataset:v1"})," is called the dataset tag and it is a unique identifier to your dataset."]}),"\n",(0,n.jsx)(t.h2,{id:"automatic-dataset-tracking",children:"Automatic dataset tracking"}),"\n",(0,n.jsx)(t.p,{children:"Any changes to your dataset will trigger a version update so you can easily organize and keep track."})]})}function l(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},8453:(e,t,a)=>{a.d(t,{R:()=>i,x:()=>r});var n=a(6540);const s={},o=n.createContext(s);function i(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);