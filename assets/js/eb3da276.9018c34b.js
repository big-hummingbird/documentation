"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[986],{5044:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var i=t(4848),r=t(8453);const o={sidebar_position:1},s="Environment Variables",l={id:"best_practices/environment",title:"Environment Variables",description:"Preventing Prompt Redeployment by Using Environment variables for API URLs",source:"@site/docs/best_practices/environment.md",sourceDirName:"best_practices",slug:"/best_practices/environment",permalink:"/llm/docs/best_practices/environment",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Deployment Endpoint Specs",permalink:"/llm/docs/deployment/endpoint_specs"}},a={},c=[{value:"Preventing Prompt Redeployment by Using Environment variables for API URLs",id:"preventing-prompt-redeployment-by-using-environment-variables-for-api-urls",level:2},{value:"How to Store API URLs in Environment Variables",id:"how-to-store-api-urls-in-environment-variables",level:2},{value:"1. Set Up the Environment Variable",id:"1-set-up-the-environment-variable",level:3},{value:"2. Use It in Your Code",id:"2-use-it-in-your-code",level:3},{value:"Example: Deploying to the Cloud",id:"example-deploying-to-the-cloud",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,i.jsx)(n.h2,{id:"preventing-prompt-redeployment-by-using-environment-variables-for-api-urls",children:"Preventing Prompt Redeployment by Using Environment variables for API URLs"}),"\n",(0,i.jsxs)(n.p,{children:["Redeploying an application can be costly\u2014it takes time, risks breaking other components, and can cause downtime. With Big Hummingbird, all you need to change is the service URL to switch your prompt. Once you deploy your prompt (see ",(0,i.jsx)(n.a,{href:"/llm/docs/deployment/intro",children:"Deployment"}),"), you'll see a service URL that you need to update in your app. Instead of redeploying your whole app for such a simple update, use environment variables to make the switch."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"prompt service url",src:t(9256).A+"",width:"1716",height:"565"})}),"\n",(0,i.jsx)(n.h2,{id:"how-to-store-api-urls-in-environment-variables",children:"How to Store API URLs in Environment Variables"}),"\n",(0,i.jsx)(n.h3,{id:"1-set-up-the-environment-variable",children:"1. Set Up the Environment Variable"}),"\n",(0,i.jsxs)(n.p,{children:["Define the prompt service URL in an environment variable. If you're using a ",(0,i.jsx)(n.code,{children:".env"})," file, it looks something like this:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'title=".env"',children:"PROMPT_SERVICE_URL=https://userappservice-uuezua92dlam75lcleqh-7c3apmua4a-uc.a.run.app\n"})}),"\n",(0,i.jsx)(n.h3,{id:"2-use-it-in-your-code",children:"2. Use It in Your Code"}),"\n",(0,i.jsxs)(n.p,{children:["Access the URL through an environment variable using a tool like ",(0,i.jsx)(n.code,{children:"dotenv"})," (for Node.js)"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Install dotenv"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npm install dotenv\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"app.js"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"require('dotenv').config();\nconst promptServiceUrl = process.env.PROMPT_SERVICE_URL;\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:"Switch service url without redeployment"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Just change the ",(0,i.jsx)(n.code,{children:".env"})," file or adjust the variable in your hosting provider's settings (e.g. AWS, Docker). This way, you switch the prompts instantly without having to rebuild or redeploy the entire application."]}),"\n",(0,i.jsx)(n.h2,{id:"example-deploying-to-the-cloud",children:"Example: Deploying to the Cloud"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"AWS Lambda"}),": Configure ",(0,i.jsx)(n.code,{children:"PROMPT_SERVICE_URL"})," in the environment variables section."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Docker"}),": Use ",(0,i.jsx)(n.code,{children:"-e"})," to set the variable when running:"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"docker run -e PROMPT_SERVICE_URL=https://userappservice-uuezua92dlam75lcleqh-7c3apmua4a-uc.a.run.app my-app\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"Just a heads up: You'll still need to redeploy on Big Hummingbird's dashboard to get the new service URL. This is how you differentiate different prompt setups. But the good news is, with environment variables, you won't need to redeploy your app itself!"})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},9256:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/deployment_url-659e515eb5fbe2fe66c29cd96ad424a8.png"},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>l});var i=t(6540);const r={},o=i.createContext(r);function s(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);